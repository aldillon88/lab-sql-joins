-- Write SQL queries to perform the following tasks using the Sakila database:
USE sakila;

-- 1. List the number of films per category.
SELECT c.name, COUNT(DISTINCT fg.film_id) as count
FROM film_category AS fg
JOIN category AS c
ON fg.category_id = c.category_id
GROUP BY c.name;

-- 2. Retrieve the store ID, city, and country for each store.
SELECT
	s.store_id,
    c.city, 
    co.country
FROM store AS s
JOIN address AS a
ON s.address_id = a.address_id
JOIN city AS c
ON a.city_id = c.city_id
JOIN country AS co
ON c.country_id = co.country_id;

-- 3. Calculate the total revenue generated by each store in dollars.
SELECT
	s.store_id,
    SUM(p.amount) AS amount
FROM store AS s
LEFT JOIN staff AS st
ON s.store_id = st.store_id
JOIN payment AS p
ON st.staff_id = p.staff_id
GROUP BY s.store_id;

-- 4. Determine the average running time of films for each category.
SELECT
	c.name AS category,
    ROUND(AVG(f.length), 2) AS avg_length
FROM film AS f
JOIN film_category AS fg
ON f.film_id = fg.film_id
JOIN category AS c
ON fg.category_id = c.category_id
GROUP BY category;

-- Bonus:
-- 1. Identify the film categories with the longest average running time.
SELECT
	c.name AS category,
    ROUND(AVG(f.length), 2) AS avg_length
FROM film AS f
JOIN film_category AS fg
ON f.film_id = fg.film_id
JOIN category AS c
ON fg.category_id = c.category_id
GROUP BY category
ORDER BY avg_length DESC
LIMIT 5;

-- 2. Display the top 10 most frequently rented movies in descending order.
SELECT
	f.title AS title,
    COUNT(r.rental_date) AS count
FROM film AS f
JOIN inventory AS i
ON i.film_id = f.film_id
JOIN rental AS r
ON r.inventory_id = i.inventory_id
GROUP BY title
ORDER BY count DESC
LIMIT 10;

-- 3. Determine if "Academy Dinosaur" can be rented from Store 1.
-- 4. Provide a list of all distinct film titles, along with their availability status in the inventory.
-- Include a column indicating whether each title is 'Available' or 'NOT available.'
-- Note that there are 42 titles that are not in the inventory, and this information can be obtained 
-- using a CASE statement combined with IFNULL."